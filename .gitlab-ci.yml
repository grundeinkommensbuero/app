# https://gitlab.com/gableroux/gitlab_ci_flutter_example/blob/master/.gitlab-ci.yml
# Siehe auch: https://medium.com/@chima_37359/setup-gitlab-ci-in-flutter-android-project-89f6628828e8

# Caching Maven und Flutter Repositories
cache:
  key: ${CI_COMMIT_REF_SLUG***REMOVED***
  paths:
    - .m2/repository
    - /home/cirrus/.pub-cache

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"

stages:
  - build_and_test
  - deploy_coverage
  - deploy_backend

# flutter test wird möglicherweise gerade erweitert, um --coverage und --machine gleichzeitig zuzulassen
# https://github.com/flutter/flutter/issues/30108
unit_tests_app:
  image: cirrusci/flutter:latest
  stage: build_and_test
  script:
    # tojunit-Parser herunterladen und aktivieren
    - cd sammel_app/build_dependencies
    - flutter pub get
    - flutter pub global activate junitreport
    - export PATH="$PATH":"$HOME/.pub-cache/bin"
    # erster run für test-ergebnisse
    - cd ..
    - flutter pub get
    - flutter test --machine | tojunit --output TEST-app.xml
    # zweiter run für coverage
    - - flutter test --coverage
    - lcov --list coverage/lcov.info
    - lcov --remove 'coverage/lcov.info' -o coverage/lcov.info '**/BackendService.dart' '**/main.dart' # untestbares entfernen
    - genhtml coverage/lcov.info --output=coverage
  artifacts:
    reports:
      junit:
        - sammel_app/TEST-app.xml
    paths:
      - sammel_app/coverage/

build_android_apk:
  image: cirrusci/flutter:latest
  stage: build_and_test
  script:
    - cd sammel_app
    - flutter build apk --debug
    - mkdir ../downloads/
    - mkdir ../downloads/sammel_app/
    - cp build/app/outputs/apk/debug/app-debug.apk ../downloads/sammel_app/sammel-app-nightly.apk

  artifacts:
    paths:
      - downloads/

test_server:
  image: maven:latest
  stage: build_and_test
  script:
    - cd sammel_server
    - mvn verify --fail-at-end --no-transfer-progress
  artifacts:
    reports:
      junit:
        - sammel_server/target/surefire-reports/TEST*.xml
    paths:
      - sammel_server/target/site/jacoco

#  image: maven:latest
#  stage: build_and_test
#  script:
#    - cd sammel_server
#    - mvn install -DskipTests
#  artifacts:
#    paths:
#      - sammel_server/target

#push_server:
#  image: docker:latest
#  stage: deploy_backend
#  dependencies:
#    - build_server
#  script:
#    - docker build sammel_server -t kybernetik/sammel-server:latest
#    - docker push kybernetik/sammel-app:sammel-server

pages:
  image: alpine
  stage: deploy_coverage
  dependencies:
    - unit_tests_app
    - test_server
  script:
    - mkdir public
    - mkdir public/coverage
    - mv sammel_app/coverage/ public/coverage/app
    - mv sammel_server/target/site/jacoco public/coverage/server
  artifacts:
    paths:
      - public
  only:
    - master